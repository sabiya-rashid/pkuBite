// <auto-generated />
using DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbContext.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230915090924_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("pkuBite.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Plant foods"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Savoury foods"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Diary foods"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Drinks"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Snack foods"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Baking foods"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sweets, Spreads"
                        });
                });

            modelBuilder.Entity("pkuBite.Models.Favourites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("pkuBite.Models.FoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasMaxLength(100)
                        .HasColumnType("float");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Fresh almonds",
                            ImageUrl = "imageurl",
                            Name = "Almonds",
                            Price = 5.9900000000000002,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Roasted cashews",
                            ImageUrl = "imageurl",
                            Name = "Cashews",
                            Price = 6.4900000000000002,
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Sun-dried raisins",
                            ImageUrl = "imageurl",
                            Name = "Raisins",
                            Price = 3.9900000000000002,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Dried apricots",
                            ImageUrl = "imageurl",
                            Name = "Apricots",
                            Price = 7.9900000000000002,
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Fresh chicken",
                            ImageUrl = "imageurl",
                            Name = "Chicken",
                            Price = 8.9900000000000002,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 6,
                            Description = "Wild-caught salmon",
                            ImageUrl = "imageurl",
                            Name = "Salmon",
                            Price = 12.99,
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 7,
                            Description = "Organic tofu",
                            ImageUrl = "imageurl",
                            Name = "Tofu",
                            Price = 4.4900000000000002,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 8,
                            Description = "Fresh eggplant",
                            ImageUrl = "imageurl",
                            Name = "Eggplant",
                            Price = 2.9900000000000002,
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 9,
                            Description = "Sharp cheddar cheese",
                            ImageUrl = "imageurl",
                            Name = "Cheddar Cheese",
                            Price = 4.9900000000000002,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 10,
                            Description = "Fresh mozzarella cheese",
                            ImageUrl = "imageurl",
                            Name = "Mozzarella Cheese",
                            Price = 5.4900000000000002,
                            SubCategoryId = 5
                        },
                        new
                        {
                            Id = 11,
                            Description = "Whole milk",
                            ImageUrl = "imageurl",
                            Name = "Milk",
                            Price = 2.29,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 12,
                            Description = "Greek yogurt",
                            ImageUrl = "imageurl",
                            Name = "Yogurt",
                            Price = 3.4900000000000002,
                            SubCategoryId = 6
                        },
                        new
                        {
                            Id = 13,
                            Description = "Premium black tea",
                            ImageUrl = "imageurl",
                            Name = "Black Tea",
                            Price = 3.9900000000000002,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 14,
                            Description = "Arabica coffee",
                            ImageUrl = "imageurl",
                            Name = "Coffee",
                            Price = 6.9900000000000002,
                            SubCategoryId = 7
                        },
                        new
                        {
                            Id = 15,
                            Description = "Carbonated soda",
                            ImageUrl = "imageurl",
                            Name = "Soda",
                            Price = 1.99,
                            SubCategoryId = 8
                        },
                        new
                        {
                            Id = 16,
                            Description = "Assorted fruit juices",
                            ImageUrl = "imageurl",
                            Name = "Fruit Juice",
                            Price = 4.4900000000000002,
                            SubCategoryId = 8
                        },
                        new
                        {
                            Id = 17,
                            Description = "Dark chocolate bar",
                            ImageUrl = "imageurl",
                            Name = "Chocolate",
                            Price = 2.9900000000000002,
                            SubCategoryId = 9
                        },
                        new
                        {
                            Id = 18,
                            Description = "Assorted candies",
                            ImageUrl = "imageurl",
                            Name = "Candy",
                            Price = 1.49,
                            SubCategoryId = 9
                        },
                        new
                        {
                            Id = 19,
                            Description = "Classic potato chips",
                            ImageUrl = "imageurl",
                            Name = "Potato Chips",
                            Price = 2.79,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 20,
                            Description = "Crunchy pretzels",
                            ImageUrl = "imageurl",
                            Name = "Pretzels",
                            Price = 2.29,
                            SubCategoryId = 10
                        },
                        new
                        {
                            Id = 21,
                            Description = "Decadent chocolate cake",
                            ImageUrl = "imageurl",
                            Name = "Chocolate Cake",
                            Price = 8.9900000000000002,
                            SubCategoryId = 11
                        },
                        new
                        {
                            Id = 22,
                            Description = "Homemade carrot cake",
                            ImageUrl = "imageurl",
                            Name = "Carrot Cake",
                            Price = 7.4900000000000002,
                            SubCategoryId = 11
                        },
                        new
                        {
                            Id = 23,
                            Description = "Freshly baked cookies",
                            ImageUrl = "imageurl",
                            Name = "Chocolate Chip Cookies",
                            Price = 3.9900000000000002,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 24,
                            Description = "Healthy oatmeal cookies",
                            ImageUrl = "imageurl",
                            Name = "Oatmeal Cookies",
                            Price = 3.4900000000000002,
                            SubCategoryId = 12
                        },
                        new
                        {
                            Id = 25,
                            Description = "Granulated sugar",
                            ImageUrl = "imageurl",
                            Name = "Sugar",
                            Price = 2.4900000000000002,
                            SubCategoryId = 13
                        },
                        new
                        {
                            Id = 26,
                            Description = "Pure maple syrup",
                            ImageUrl = "imageurl",
                            Name = "Maple Syrup",
                            Price = 5.9900000000000002,
                            SubCategoryId = 13
                        },
                        new
                        {
                            Id = 27,
                            Description = "Assorted gummy bears",
                            ImageUrl = "imageurl",
                            Name = "Gummy Bears",
                            Price = 1.99,
                            SubCategoryId = 14
                        },
                        new
                        {
                            Id = 28,
                            Description = "Black licorice twists",
                            ImageUrl = "imageurl",
                            Name = "Licorice",
                            Price = 2.29,
                            SubCategoryId = 14
                        });
                });

            modelBuilder.Entity("pkuBite.Models.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Nuts and seeds"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Dried Fruits"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Meat, Fish, Eggs"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "Vegeterian"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Name = "Regular cheese"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Name = "Milk products"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Name = "Tea and coffee"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Name = "Fizzy drinks and Squash juice"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Name = "Sweet snacks"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            Name = "Salty snacks"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 6,
                            Name = "Cakes"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 6,
                            Name = "Biscuits"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 7,
                            Name = "Sugars and syrups"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 7,
                            Name = "Confectionary"
                        });
                });

            modelBuilder.Entity("pkuBite.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("pkuBite.Models.Favourites", b =>
                {
                    b.HasOne("pkuBite.Models.FoodItem", "Food")
                        .WithMany("Favourites")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pkuBite.Models.User", "User")
                        .WithMany("Favourites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("User");
                });

            modelBuilder.Entity("pkuBite.Models.FoodItem", b =>
                {
                    b.HasOne("pkuBite.Models.SubCategory", "SubCategory")
                        .WithMany("FoodItems")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("pkuBite.Models.SubCategory", b =>
                {
                    b.HasOne("pkuBite.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("pkuBite.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("pkuBite.Models.FoodItem", b =>
                {
                    b.Navigation("Favourites");
                });

            modelBuilder.Entity("pkuBite.Models.SubCategory", b =>
                {
                    b.Navigation("FoodItems");
                });

            modelBuilder.Entity("pkuBite.Models.User", b =>
                {
                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
